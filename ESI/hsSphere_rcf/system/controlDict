/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2406                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     rhoCentralFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.0605;

deltaT          6e-7; //1e-7;

writeControl    adjustableRunTime;

writeInterval   5e-5;//5e-4;

purgeWrite      0;

writeFormat     binary;

writePrecision  15;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  yes;

maxCo           0.5;

maxDeltaT       3e-5; //2e-8;

functions
{
/*     gradP
    {
        type                grad;
        libs                (fieldFunctionObjects);
        field               p;
        executeControl      timeStep;
        executeInterval     1;
        writeControl        writeTime;
    }
    gradP_mag
    {
        type                mag;
        libs                (fieldFunctionObjects);
        field               grad(p);
        executeControl      timeStep;
        executeInterval     1;
        writeControl        writeTime;
    } */
    calcGradient
    {
        libs        ("libutilityFunctionObjects.so");
        type        coded;
        name        computePressureGradientMag;
        executeControl      timeStep;
        executeInterval     1;
        writeControl        writeTime;
        writeInterval       1;

        codeExecute
        #{
            const volScalarField& p  =  mesh().lookupObject<volScalarField>("p");

            static autoPtr<volScalarField> pressureGradientMagPtr;
            if(!pressureGradientMagPtr.valid()) {
              Info << "Creating pressureGradientMag" << nl;

              pressureGradientMagPtr.set
              (
                  new volScalarField
                  (
                    IOobject
                    (
                        "pressureGradientMag",
                        time_.timeName(),
                        p.mesh(),
                        IOobject::NO_READ,
                        IOobject::AUTO_WRITE
                    ),
                    mag(fvc::grad(p))
                  )
              );
            }
            volScalarField &pressureGradientMag = pressureGradientMagPtr();
            pressureGradientMag.checkIn();
            pressureGradientMag = mag(fvc::grad(p));
            Info << " max pressureGradientMag " << max(pressureGradientMag) << nl;
        #};
    }
}

OptimisationSwitches
{
    //- Parallel IO file handler
    //  uncollated (default), collated or masterUncollated
    //fileHandler collated;
}

// ************************************************************************* //
